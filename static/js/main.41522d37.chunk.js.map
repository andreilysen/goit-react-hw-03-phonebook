{"version":3,"sources":["Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactsList/ContactListItem.js","Components/ContactsList/ContactsList.js","Components/App/App.js","index.js","Components/Form/Form.module.css","Components/ContactsList/Contact.module.css"],"names":["Form","state","name","number","handleChangeInput","e","setState","target","value","resetInput","handleAddContact","preventDefault","contact","id","uuidv4","props","onAddContacts","className","styles","form","onSubmit","this","item","input","type","pattern","title","required","onChange","button","Component","Filter","changeFilter","ContactListItem","onClickRemove","items","onClick","ContactsList","contacts","onRemoveContact","length","map","storage","JSON","parse","localStorage","getItem","App","filter","AddContact","newContact","console","log","inContact","find","toLowerCase","alert","prevState","ChangeFilter","removeContact","dataId","prevProps","currentContacts","setItem","stringify","filterContact","includes","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.41522d37.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport styles from \"./Form.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  static propTypes = {\n    onAddContacts: PropTypes.func.isRequired,\n  };\n\n  handleChangeInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  resetInput = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleAddContact = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const id = uuidv4();\n    const contact = { name, number, id };\n    this.props.onAddContacts(contact);\n    this.resetInput();\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleAddContact}>\n        <label className={styles.item}>\n          <p>name</p>\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChangeInput}\n          />\n          <p>Number</p>\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChangeInput}\n          />\n          <button className={styles.button} type=\"submit\">\n            Add contact\n          </button>\n        </label>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../Form/Form.module.css\";\n\nconst Filter = ({ value, changeFilter }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={changeFilter}\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Contact.module.css\";\n\nconst ContactListItem = ({ name, number, onClickRemove }) => (\n  <li className={styles.items}>\n    <p className={styles.item}>{name}:</p>\n    <p className={styles.item}>{number}</p>\n    <button onClick={onClickRemove}>Delete</button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClickRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport ContactListItem from \"./ContactListItem\";\n\nimport PropTypes from \"prop-types\";\n\n// import styles from \"./Contact.module.css\";\n\nconst ContactsList = ({ contacts, onRemoveContact }) => {\n  // console.log(\"list\", contacts);\n  return (\n    contacts.length > 0 && (\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <ContactListItem\n            key={id}\n            name={name}\n            number={number}\n            onClickRemove={() => onRemoveContact(id)}\n          />\n        ))}\n      </ul>\n    )\n  );\n  // contacts.map(({contact}) => {\n  // return (\n  //   <li className={styles.items} key={contact.id}>\n  //     <p className={styles.item}>{contact.name}:</p>\n  //     <p className={styles.item}>{contact.number}</p>\n  //     <button onClick={() => onRemoveContact(contact.id)}>Delete</button>\n  //   </li>\n  // );\n  // });\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactsList;\n","import React, { Component } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\n\nimport Form from \"../Form\";\nimport Filter from \"../Filter\";\nimport ContactsList from \"../ContactsList\";\n\nconst storage = JSON.parse(localStorage.getItem(\"data\"));\n// console.log(storage);\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    if (storage) {\n      this.setState({ contacts: storage });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (currentContacts !== prevContacts) {\n      localStorage.setItem(\"data\", JSON.stringify(currentContacts));\n    }\n  }\n\n  AddContact = (newContact) => {\n    console.log(newContact);\n    const inContact = this.state.contacts.find(\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (inContact) {\n      alert(`${inContact.name}  is already in contacts!`);\n      return;\n    }\n    this.setState((prevState) => ({\n      contacts: [{ ...newContact }, ...prevState.contacts],\n    }));\n  };\n\n  ChangeFilter = (e) => {\n    // console.log(e);\n\n    this.setState({ filter: e.target.value });\n  };\n\n  removeContact = (dataId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((contact) => contact.id !== dataId),\n      };\n    });\n  };\n\n  render() {\n    // console.log(`render`);\n    const filterContact = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <Form onAddContacts={this.AddContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} changeFilter={this.ChangeFilter} />\n        <ContactsList\n          contacts={filterContact}\n          onRemoveContact={this.removeContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__22YWk\",\"item\":\"Form_item__32FAu\",\"button\":\"Form_button__2xcGa\",\"input\":\"Form_input__3k9sD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Contact_items__2_W5O\",\"item\":\"Contact_item__TJHAQ\"};"],"sourceRoot":""}